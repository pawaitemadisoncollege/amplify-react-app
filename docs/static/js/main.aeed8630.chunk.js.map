{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","aws-exports.js","index.js"],"names":["App","useState","coins","updateCoins","fetchCoins","a","updateLoading","limit","input","start","API","get","data","console","error","useEffect","updateInput","updateInputValues","type","value","loading","className","placeholder","onChange","e","target","onClick","map","coin","index","name","symbol","price_usd","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","awsmobile","Amplify","configure","config","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RAAe,I,cC8GAA,EA/FH,WAAM,MAEaC,mBAAS,IAFtB,mBAETC,EAFS,KAEFC,EAFE,KAKVC,EAAU,uCAAG,gCAAAC,EAAA,sEAGfC,GAAc,GAENC,EAAiBC,EAAjBD,MAAOE,EAAUD,EAAVC,MALA,SAMIC,IAAIC,IAAI,YAAR,uBAAqCJ,EAArC,kBAAoDE,IANxD,OAMTG,EANS,OAOfT,EAAYS,EAAKV,OACjBI,GAAc,GARC,kDAYfO,QAAQC,MAAR,MAZe,0DAAH,qDAgChBC,qBACE,WACEX,MAEA,IAzCY,MA6CWH,mBAAS,CAAEM,MAAO,GAAIE,MAAO,IA7CxC,mBA6CXD,EA7CW,KA6CJQ,EA7CI,KAgDZC,EAAoB,SAACC,EAAMC,GAC/BH,EAAY,2BACPR,GADM,kBAENU,EAAOC,MAnDI,EAuDelB,oBAAS,GAvDxB,mBAuDXmB,EAvDW,KAuDFd,EAvDE,KAyDhB,OACE,sBAAKe,UAAU,MAAf,UAEE,uBACEC,YAAY,yBACZC,SAAU,SAAAC,GAAC,OAAIP,EAAkB,QAASO,EAAEC,OAAON,UAGrD,uBACEI,SAAU,SAAAC,GAAC,OAAIP,EAAkB,QAASO,EAAEC,OAAON,QACnDG,YAAY,kBAGd,wBAAQI,QAAStB,EAAjB,yBAEDgB,GAAW,8CAGPA,GACDlB,EAAMyB,KACJ,SAACC,EAAMC,GAAP,OACA,gCAGE,+BACGD,EAAKE,KADR,MACiBF,EAAKG,UAEtB,mCACIH,EAAKI,eANJH,UClFFI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCQCQ,EAZG,CACd,mBAAsB,YACtB,uBAA0B,CACtB,CACI,KAAQ,YACR,SAAY,+DACZ,OAAU,e,MCDtBC,QAAQC,UAAUC,GAElBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BjB,M","file":"static/js/main.aeed8630.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","// Import useState and useEffect hooks from React\nimport \n  React\n  , { \n    useState\n    , useEffect } \n    \n  from 'react';\n\n// Import the API category from AWS Amplify\nimport { API } from 'aws-amplify'  // swirly because not default export\n\nimport logo from './logo.svg';\nimport './App.css';\n\nconst App = () => { \n  // Create coins variable and set to empty array\n  const [coins, updateCoins] = useState([]);  // useState returns an array with two items. more on useState next week.\n\n  // Define a constant that is a function to all API\n  const fetchCoins = async () => { // an asynch lambda that goes to\n\n    try {\n      updateLoading(true);\n\n      const { limit, start } = input\n      const data = await API.get('cryptoapi', `/coins?limit=${limit}&start=${start}`)\n      updateCoins(data.coins)  // updateCoins was given to us from useState (react stuff!)\n      updateLoading(false);\n    }\n\n    catch (err) {\n      console.error(err);\n    }\n    \n  };\n//rewrite without async await \n  // const fetchCoins =  () => { // an asynch lambda that goes to\n\n  //     updateLoading(true);\n\n  //     const { limit, start } = input\n  //     API.get('cryptoapi', `/coins?limit=${limit}&start=${start}`) // js promise\n  //       .then(response => updateCoins(response.coins))\n  //       .catch(err => console.error(err))\n  //     ;\n  //     updateLoading(false);\n    \n    \n  // };\n\n  // Call fetchCoins function when component loads\n  useEffect(\n    () => {\n      fetchCoins();\n    }\n    , []\n  );\n\n  // Create additional state to hold user input for limit and start properties\nconst [input, updateInput] = useState({ limit: 50, start: 0 })\n\n// Create a new function to allow users to update the input values\nconst updateInputValues = (type, value) => {\n  updateInput({ \n    ...input\n    , [type]: value \n  });\n};\n\nconst [loading, updateLoading] = useState(true);\n\n  return (\n    <div className=\"App\">\n\n      <input\n        placeholder=\"Enter a starting index\"\n        onChange={e => updateInputValues('start', e.target.value)}\n      />\n      \n      <input\n        onChange={e => updateInputValues('limit', e.target.value)}\n        placeholder=\"Enter a limit\"\n      />\n\n      <button onClick={fetchCoins}>Fetch Coins</button>\n      \n    {loading && <h2>Loading....</h2>}\n\n      {\n        !loading && \n        coins.map(  // for each item... \n          (coin, index) => (\n          <div \n            key={index}\n          >\n            <h2>\n              {coin.name} - {coin.symbol}\n            </h2>\n            <h5>\n              ${coin.price_usd}\n            </h5>\n          </div>\n          )\n        )\n      }\n    </div>\n  );\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/* eslint-disable */\n// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\n\nconst awsmobile = {\n    \"aws_project_region\": \"us-east-2\",\n    \"aws_cloud_logic_custom\": [\n        {\n            \"name\": \"cryptoapi\",\n            \"endpoint\": \"https://i1lrwjq024.execute-api.us-east-2.amazonaws.com/local\",\n            \"region\": \"us-east-2\"\n        }\n    ]\n};\n\n\nexport default awsmobile;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Amplify from 'aws-amplify';\nimport config from './aws-exports';\n\nAmplify.configure(config);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}